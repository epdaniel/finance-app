{"version":3,"sources":["userProfile.js","GoogleBtn.js","App.js","reportWebVitals.js","index.js"],"names":["UserProfile","full_name","id","img_url","m_isLoggedIn","getName","setName","name","localStorage","setItem","getId","setId","newId","getImgUrl","setImgUrl","url","logOut","this","setLoggedIn","clear","isLoggedIn","status","login","tryRememberLogin","getItem","CLIENT_ID","GoogleBtn","props","state","isLogined","bind","handleLoginFailure","logout","handleLogoutFailure","response","profile","getBasicProfile","getAuthResponse","id_token","getImageUrl","accessToken","setState","alert","style","userGoogleImgStyle","src","alt","clientId","buttonText","onLogoutSuccess","onFailure","onSuccess","cookiePolicy","responseType","Component","width","marginBottom","App","axios","get","then","res","data","console","log","className","body","onClick","clickbtn","getEntry","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73c94e42.chunk.js","sourcesContent":["let UserProfile = (function () {\r\n  let full_name = \"\";\r\n  let id = -1;\r\n  let img_url = \"\"\r\n  let m_isLoggedIn = false;\r\n\r\n  let getName = function () {\r\n    return full_name;    // Or pull this from cookie/localStorage\r\n  };\r\n\r\n  let setName = function (name) {\r\n    full_name = name;\r\n    localStorage.setItem('fullName', name);\r\n  };\r\n\r\n  let getId = function () {\r\n    return id;\r\n  };\r\n\r\n  let setId = function (newId) {\r\n    id = newId;\r\n    localStorage.setItem('ID', newId);\r\n  };\r\n\r\n  let getImgUrl = function () {\r\n    return img_url;\r\n  };\r\n\r\n  let setImgUrl = function (url) {\r\n    img_url = url;\r\n    localStorage.setItem('userIMG', url);\r\n  };\r\n\r\n  let logOut = function () {\r\n    this.setId(null);\r\n    this.setName(\"\");\r\n    this.setImgUrl(\"\");\r\n    this.setLoggedIn(false);\r\n    localStorage.clear();\r\n  }\r\n\r\n  let login = function (id, name, url) {\r\n    this.setId(id);\r\n    this.setName(name);\r\n    this.setImgUrl(url);\r\n    this.setLoggedIn(true);\r\n  }\r\n\r\n  let isLoggedIn = function () {\r\n    return m_isLoggedIn;\r\n  }\r\n\r\n  let setLoggedIn = function (status) {\r\n    m_isLoggedIn = status;\r\n  }\r\n\r\n  let tryRememberLogin = function () {\r\n    if (localStorage.getItem('ID') !== null) {\r\n      this.login(localStorage.getItem('ID'), localStorage.getItem('fullName'), localStorage.getItem('userIMG'));\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return {\r\n    getName: getName,\r\n    setName: setName,\r\n    getId: getId,\r\n    setId: setId,\r\n    getImgUrl: getImgUrl,\r\n    setImgUrl: setImgUrl,\r\n    logOut: logOut,\r\n    isLoggedIn: isLoggedIn,\r\n    setLoggedIn: setLoggedIn,\r\n    login: login,\r\n    tryRememberLogin: tryRememberLogin,\r\n  }\r\n\r\n})();\r\n\r\n\r\nexport default UserProfile;","import React, { Component } from 'react'\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport UserProfile from './userProfile';\r\n\r\n\r\nconst CLIENT_ID = '232952519661-430s05vr9he9sf0o45b88nde6jid56vg.apps.googleusercontent.com';\r\n\r\n\r\nclass GoogleBtn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLogined: UserProfile.tryRememberLogin(),\r\n            //accessToken: ''\r\n        };\r\n\r\n        this.login = this.login.bind(this);\r\n        this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\r\n    }\r\n\r\n    login(response) {\r\n        let profile = response.getBasicProfile();\r\n        UserProfile.login(response.getAuthResponse().id_token, profile.getName(), profile.getImageUrl());\r\n        //console.log('Log in from: ' + response.getAuthResponse().id_token);\r\n        //console.log('Name: ' + profile.getName());\r\n        if (response.accessToken) {\r\n            this.setState(state => ({\r\n                isLogined: true,\r\n                //accessToken: response.accessToken\r\n            }));\r\n        }\r\n    }\r\n\r\n    logout(response) {\r\n        UserProfile.logOut();\r\n        this.setState(state => ({\r\n            isLogined: false,\r\n            //accessToken: ''\r\n        }));\r\n    }\r\n\r\n    handleLoginFailure(response) {\r\n        alert('Failed to log in')\r\n    }\r\n\r\n    handleLogoutFailure(response) {\r\n        alert('Failed to log out')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {  this.state.isLogined ?\r\n                    <div>\r\n                        <img style={userGoogleImgStyle} src={UserProfile.getImgUrl()} alt=\"User\"></img>\r\n                        <b> {UserProfile.getName()} </b>\r\n                        <GoogleLogout\r\n                            clientId={CLIENT_ID}\r\n                            buttonText='Sign out'\r\n                            onLogoutSuccess={this.logout}\r\n                            onFailure={this.handleLogoutFailure}\r\n                        >\r\n                        </GoogleLogout></div> : <GoogleLogin\r\n                        clientId={CLIENT_ID}\r\n                        buttonText='Sign in'\r\n                        onSuccess={this.login}\r\n                        onFailure={this.handleLoginFailure}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        responseType='code,token'\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst userGoogleImgStyle = {\r\n    width: \"30px\",\r\n    marginBottom: \"-10px\",\r\n}\r\n\r\nexport default GoogleBtn;","\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport GoogleBtn from './GoogleBtn';\n\nclass App extends Component {\n  state = {\n    response: {}\n  };\n\n  componentDidMount() {\n    axios.get('/api/v1/say-something').then((res) => {\n      const response = res.data;\n      this.setState({ response });\n    });\n  }\n\n  clickbtn() {\n    console.log(\"button clicked\");\n    axios.get('/new').then((res) => {\n      console.log(\"got ans\")\n    });\n  };\n\n\n  getEntry() {\n    axios.get('/get').then((res) => {\n      console.log(\"got ans!\")\n      console.log(res.data);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <GoogleBtn></GoogleBtn>\n        <h1>Finance App</h1>\n        <h1>{this.state.response.body}</h1>\n        <button onClick={this.clickbtn}>Add entry</button>\n        <button onClick={this.getEntry}>Get entry</button>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}